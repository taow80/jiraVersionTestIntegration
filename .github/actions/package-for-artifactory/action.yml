name: Package for Artifactory
description: create nuget package for pushing to artifactory

runs:
  using: composite
  steps:

    - name: Bump ${{ env.APP_NAME }} Version
      shell: bash
      run: |
          npm version minor -w projects/${{ env.PATH_APP_NAME }}

    - name: Get Current Package Version
      shell: bash       
      id: package-version       
      run: |
        echo "VERSION=$(node -p "require('./projects/${{ env.PATH_APP_NAME }}/package.json').version")" >> $GITHUB_OUTPUT
        
    - name: Set Release Version
      shell: bash
      id: release-version
      run:
          echo "RELEASE_VERSION=${{ steps.package-version.outputs.VERSION }}+${{ env.APP_NAME }}" >> $GITHUB_ENV

    - name: Commit Version Bump
      if: env.DEPLOY_ENVIRONMENT == 'production'
      shell: bash
      run: |
        git pull origin master
        git commit -am "version(${{ env.APP_NAME }}): bump version to ${{ steps.package-version.outputs.VERSION }}" -nv
        git push -u origin master

    - name: Get Last Release Version
      if: env.DEPLOY_ENVIRONMENT == 'production'
      shell: bash
      id: last-release-version
      run: |
          echo "LAST_RELEASE_VERSION=$(gh release list | grep -i '^${{ env.PATH_APP_NAME }}@v' | head -n 1 | awk '{print $1}')" >> $GITHUB_ENV
    
    - name: Create Release
      if: env.DEPLOY_ENVIRONMENT == 'production'
      shell: bash
      env: 
        GH_TOKEN: ${{ github.token }}
      id: release-notes
      run: |
        echo "COMMITS=$(node ./.github/release-notes/getCommits.js ${{ env.LAST_RELEASE_VERSION }} | awk '{print $1}')"
        echo "node ./.github/release-notes/createRelease.js ${{ env.PATH_APP_NAME }} ${{ steps.package-version.outputs.VERSION }} '$COMMITS'  | awk '{print $1}'"
        
