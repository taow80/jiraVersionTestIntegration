name: "Jira Release Web Hook"
description: "Creates a new Jira release and assigns all relevant issues to it."
inputs:
  jira-project-key:
    description: "Jira project identifier"
    required: true
  jira-automation-webhook:
    description: "Jira automation webhook url"
    required: true
  build-version:
    description: "Version identifier"
    required: true
runs:
  using: "composite"
  steps:
    - name: Fetch entire Git history (including tags)
      run: git fetch --prune --unshallow --tags
      shell: bash

    - name: Debug describe issue names
      run: |
        export LC_ALL=en_US.utf8
        git log $(git describe --abbrev=0 --tags 2> /dev/null)..HEAD | \
          grep -oE "${{ inputs.jira-project-key }}-[[:digit:]]{1,}" | sort | uniq | \
          sed 's/^\|$/"/g' | paste -sd , - | awk '{print "DESCRIBE_JIRA_ISSUES="$0}' >> $GITHUB_ENV \
          echo 'Describe Tags Issue List: ${{ env.DESCRIBE_JIRA_ISSUES }}'
      shell: bash

    - name: Debug rev-list issue names
      run: |
        export LC_ALL=en_US.utf8
        git log $(git rev-list --max-parents=0 HEAD)..HEAD | \
          grep -oE "${{ inputs.jira-project-key }}-[[:digit:]]{1,}" | sort | uniq | \
          sed 's/^\|$/"/g' | paste -sd , - | awk '{print "REVLIST_JIRA_ISSUES="$0}' >> $GITHUB_ENV \
          echo 'Describe Rev-List Issue List: ${{ env.REVLIST_JIRA_ISSUES }}'
      shell: bash
    
    - name: Collect issue numbers since last release/tag
      run: |
        export LC_ALL=en_US.utf8
        git log $(git describe --abbrev=0 --tags 2> /dev/null || git rev-list --max-parents=0 HEAD)..HEAD | \
          grep -oE "${{ inputs.jira-project-key }}-[[:digit:]]{1,}" | sort | uniq | \
          sed 's/^\|$/"/g' | paste -sd , - | awk '{print "RELATED_JIRA_ISSUES="$0}' >> $GITHUB_ENV \
          echo 'Related Jira Issue List: ${{ env.RELATED_JIRA_ISSUES }}'
      shell: bash

    - name: Create json and invoke webhook
      run: |
        $json = ConvertTo-Json @{issues = @(${{ env.RELATED_JIRA_ISSUES }}); data = @{version = "${{ inputs.build-version }}"; projectName = "${{ inputs.jira-project-key }}"}}
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Invoke-RestMethod ${{ inputs.jira-automation-webhook }} -Method Post -Body $json -ContentType "application/json"
      shell: pwsh
