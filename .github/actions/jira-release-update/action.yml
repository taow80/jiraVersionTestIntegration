name: Jira Release Web Hook
description: Creates a new Jira release and assigns all relevant issues to it.
inputs:
  jira-project-key:
    description: "Jira project identifier"
    required: true
  jira-automation-webhook:
    description: "Jira automation webhook url"
    required: true
  build-version:
    description: "Version identifier"
    required: true
runs:
  using: composite
  steps:
    - name: Update Locale
      run: export LC_ALL=en_US.utf8
      shell: bash

    - name: Collect jira issue numbers since last release/tag
      shell: bash
      id: jira-list
      run: |
        REGEX_JIRA_TICKET=GHACT-[[:digit:]]{1,}
        echo $REGEX_JIRA_TICKET
        echo "ISSUES=$(git log --merges  $(git describe --abbrev=0 --tags)..HEAD | grep -iE '\((Channel|PWA)\):' -B 2 | grep -oE $REGEX_JIRA_TICKET | uniq | sed 's/^\|$/"/g' | paste -sd , - | awk '{print $0}')" >> $GITHUB_ENV

    - name: Create json and invoke webhook
      run: |
        $json = ConvertTo-Json @{issues = @(${{ env.ISSUES }}); data = @{version = "${{ env.VERSION }}"; projectName = "${{ env.PATH_APP_NAME }}@v{{ inputs.jira-project-key }}"}}
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Invoke-RestMethod ${{ inputs.jira-automation-webhook }} -Method Post -Body $json -ContentType "application/json"
      shell: pwsh
