env:
  APP_NAME: 'Channel'
  PATH_APP_NAME: 'channel'

name: Channel Package for Artifactory
on:
  workflow_dispatch:
      
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Pack Channel
    if: ${{ !startsWith( github.event.head_commit.message, 'version(' ) }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: '0'
      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          
      - name: Setup Environment
        uses: ./.github/actions/setup-environment
        
      - name: Set Deploy Environment
        id: is-production
        shell: bash
        run: |
          if [[ ${{ github.event_name }} == workflow_dispatch ]]; then
            echo "DEPLOY_ENVIRONMENT=production" >> $GITHUB_OUTPUT
          else
            echo "DEPLOY_ENVIRONMENT=development" >> $GITHUB_OUTPUT
          fi

      - name: Create Package for Artifactory
        uses: ./.github/actions/package-for-artifactory
        id: package-for-artifactory
        env: 
          APP_NAME: ${{ env.APP_NAME }}
          PATH_APP_NAME: ${{ env.PATH_APP_NAME }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEPLOY_ENVIRONMENT: ${{ steps.is-production.outputs.DEPLOY_ENVIRONMENT }}

      - name: Update Jira issues
        uses: ./.github/actions/jira-release-update
        with:
          jira-project-key: 'GHACT'
          jira-automation-webhook: ${{ secrets.JIRA_AUTOMATION_WEBHOOK }}
          build-version: ${{ steps.package-for-artifactory.outputs.RELEASE_VERSION }}
          issues: $${{ steps.package-for-artifactory.outputs.COMMITS }}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
